name: VulnLsp

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUST_FLAGS: "-C debuginfo=0 -D warnings"

jobs:
  test:
    runs-on: ubuntu-latest
    name: test
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --verbose

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy --features "logging-file"

  build:
    runs-on: ${{ matrix.runner }}
    needs: [test, lint]

    strategy:
      matrix:
        include:
          - name: ${{github.workflow}}-linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: vuln-lsp
          # - name: ${{github.workflow}}-win-amd64
          #   runner: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   build: vuln-lsp.exe
          # - name: ${{github.workflow}}-macos-amd64
          #   runner: macos-latest
          #   target: x86_64-apple-darwin
          #   build: vuln-lsp
          # - name: ${{github.workflow}}-macos-arm64
          #   runner: macos-latest
          #   target: aarch64-apple-darwin
          #   build: vuln-lsp

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Configure cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: target/${{ matrix.target }}/release/${{ matrix.build }}
